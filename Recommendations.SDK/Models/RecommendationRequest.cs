using Newtonsoft.Json.Linq;

namespace Kentico.Kontent.Recommendations.Models
{
    /// <summary>
    /// Request for Kontent Recommendations
    /// </summary>
    public class RecommendationRequest
    {
        /// <summary>
        /// REQUIRED: Visit(or) id - generated by the customer/3rd party (or by the SDK Helper), should be tracked across the application
        /// </summary>
        public string VisitId { get; set; }

        /// <summary>
        /// REQUIRED: Codename of currently viewed content item
        /// </summary>
        public string CurrentItemCodename { get; set; }

        /// <summary>
        /// REQUIRED: Number of recommendations that will be returned
        /// Rarely, smaller number of recommendations can be returned, therefore, there should be a user fallback implemented in case of this occurence
        /// </summary>
        public int ResponseLimit { get; set; }

        /// <summary>
        /// SUGGESTED: Content type of recommended content items
        /// If no type is specified, any content type can be returned
        /// </summary>
        public string RequestedTypeCodename { get; set; }

        /// <summary>
        /// OPTIONAL: Extra customization of the recommendations
        /// </summary>
        public RecommendationSettings RecommendationSettings { get; set; }

        /// <summary>
        /// OPTIONAL: Extra details about the visitor
        /// The visitor details don't have to be filled out with every request, the system will keep details for every visitor after once obtained
        /// Alternatively, visitor details can be supplied by calling the CreateVisitor SDK method
        /// </summary>
        public VisitorDetails Visitor { get; set; }

        /// <summary>
        /// Creates the recommendation request object from the recommendation custom element
        /// </summary>
        /// <param name="visitId"></param>
        /// <param name="customElementValue"></param>
        /// <returns></returns>
        public static RecommendationRequest CreateFromCustomElement(string visitId, string customElementValue)
        {
            dynamic customElementSetupObject = JObject.Parse(customElementValue);
            return new RecommendationRequest
            {
                VisitId = visitId,
                CurrentItemCodename = customElementSetupObject.itemCodename,
                RequestedTypeCodename = customElementSetupObject.requestedType,
                ResponseLimit = customElementSetupObject.requestedCount,
                RecommendationSettings = new RecommendationSettings
                {
                    Scenario = customElementSetupObject.scenario
                }
            };
        }
    }
}
